nameOverride:
fullnameOverride:

images:
  manager:
    repository: imply/manager
    tag: 4.0.1.1
  agent:
    repository: imply/agent
    tag: 2020-10-07
  pullPolicy: IfNotPresent

deployments:
  manager: true
  agents: true

  zookeeper: true
  mysql: true
  minio: true

security: {}
  # To enable authentication used between the services, provide the name of a secret containing an auth token.
  # This will also enable Druid user based authentication.
  # eg. kubectl create secret generic imply-auth-token --from-literal="auth-token=$(openssl rand -base64 32)"
  # auth:
  #   secretName: imply-auth-token
  # To enable TLS, create a kubectl secret with the CA key and certificate
  # that will be used to generate certificates.
  # eg. kubectl create secret tls imply-ca --key path/to/ca.key --cert path/to/ca.crt
  # tls:
  #   secretName: imply-ca

agents:
  managerHost: "{{ include \"imply.manager.internalService.fullname\" . }}"
  clusterName: default
  # Allows the termination grace period to be overwritten to comply with stringent K8s environment requirements.
  # Note that this value is set to 86400 seconds (24 hours) by default intentionally to allow running ingestion 
  # tasks to finish and segment re-balancing to occur before the pod is removed. If you want to set this value
  # lower, please make sure that you manually pause or abort any ongoing data ingestion tasks and check the 
  # segmentation replication state in Druid Console before changing the agent image, otherwise, it could lead 
  # to partial results when querying the cluster.
  terminationGracePeriodSeconds: 86400

manager:
  secretName: imply-secrets
  licenseKey: | # <if not using K8s Secrets, insert license key below this line, indented 4 spaces>
    
  metadataStore:
    type: mysql
    host: "{{ .Release.Name }}-mysql"
    port: 3306
    user: root
    password: imply
    database: imply-manager
    # tlsCert: |
    #   -----BEGIN CERTIFICATE-----
    #   ...
    #   -----END CERTIFICATE-----
  resources:
    requests:
      cpu: 300m
      memory: 500M
    # limits:
    #   cpu:
    #   memory:
  service:
    enabled: false
    type: LoadBalancer
    port: "{{ ternary 80 443 (empty .Values.security.tls) }}"
    # nodePort:
    # loadBalancerIP:
    protocol: TCP
    annotations: {}
      # service.beta.kubernetes.io/aws-load-balancer-ssl-cert:
      # service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
      # service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    labels: {}
  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []
  nodeSelector: {}
  tolerations: []
  affinity: {}
  annotations: {}
  labels: {}

druid:
  # By default values under druid are only used as the defaults for new clusters.
  # If you are running a single cluster and would like changes here to cause your 
  # cluster to be updated with the new values, set the update field to rolling or hard.
  # Possible values:
  # disabled - changes will not be synced
  # rolling - if the change can be performed with no cluster downtime it will be applied
  # hard - cluster will be restarted to apply the change
  # Note that if another update is currently in progress the changes will not be applied.
  # Log output of the update can be found in the manager pod.
  update: disabled
  metadataStore:
    type: mysql
    host: "{{ .Release.Name }}-mysql"
    port: 3306
    user: root
    password: imply
    # tlsCert: |
    #   -----BEGIN CERTIFICATE-----
    #   ...
    #   -----END CERTIFICATE-----
  zk:
    connectString: "{{ .Release.Name }}-zookeeper:2181"
    basePath: imply
  deepStorage:
    type: s3
    path: "s3://imply/"
    user: imply
    password: implypassword

  commonRuntimeProperties:
    - "# MinIO configurations"
    - "druid.s3.endpoint.url=http://{{ .Release.Name }}-minio:9000"
    - "druid.s3.enablePathStyleAccess=true"
  coordinatorRuntimeProperties: []
  overlordRuntimeProperties: []
  historicalRuntimeProperties: []
  historicalTier1RuntimeProperties: []
  historicalTier2RuntimeProperties: []
  historicalTier3RuntimeProperties: []
  middleManagerRuntimeProperties: []
  middleManagerTier1RuntimeProperties: []
  middleManagerTier2RuntimeProperties: []
  middleManagerTier3RuntimeProperties: []
  brokerRuntimeProperties: []
  routerRuntimeProperties: []
  pivotRuntimeProperties: []

master:
  replicaCount: 1
  resources:
    requests:
      cpu: 200m
      memory: 500M
    # limits:
    #   cpu:
    #   memory:
  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []
  nodeSelector: {}
  tolerations: []
  affinity: {}
  annotations: {}
  labels: {}

query:
  replicaCount: 1
  resources:
    requests:
      cpu: 400m
      memory: 1200M
    # limits:
    #   cpu:
    #   memory:
  service:
    type: ClusterIP
    routerPort: 8888  # Leave blank to not expose the router through the Service
    pivotPort: 9095   # Leave blank to not expose Pivot through the Service
    # routerNodePort:
    # pivotNodePort:
    # loadBalancerIP:
    protocol: TCP
    annotations: {}
      # service.beta.kubernetes.io/aws-load-balancer-ssl-cert:
      # service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    labels: {}
  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []
  nodeSelector: {}
  tolerations: []
  affinity: {}
  annotations: {}
  labels: {}

dataTier1:
  replicaCount: 2
  resources:
    requests:
      cpu: 400m
      memory: 1300M
    # limits:
    #   cpu:
    #   memory:
  persistence:
    # If persistence is disabled, extraVolumes or extraVolumeClaimTemplates should 
    # be configured with the names:
    # - var - for the segment cache
    # - tmp - for the temp directory
    enabled: true
  segmentCacheVolume:
    storageClassName:
    resources:
      requests:
        storage: 20Gi
    selector: {}
  tmpVolume:
    storageClassName:
    resources:
      requests:
        storage: 10Gi
    selector: {}
  extraVolumeClaimTemplates: {}
  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []
  nodeSelector: {}
  tolerations: []
  affinity: {}
  annotations: {}
  labels: {}

dataTier2:
  replicaCount: 0
  resources:
    requests:
      cpu: 400m
      memory: 1300M
    # limits:
    #   cpu:
    #   memory:
  persistence:
    # If persistence is disabled, extraVolumes or extraVolumeClaimTemplates should 
    # be configured with the names:
    # - var - for the segment cache
    # - tmp - for the temp directory
    enabled: true
  segmentCacheVolume:
    storageClassName:
    resources:
      requests:
        storage: 20Gi
    selector: {}
  tmpVolume:
    storageClassName:
    resources:
      requests:
        storage: 10Gi
    selector: {}
  extraVolumeClaimTemplates: {}
  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []
  nodeSelector: {}
  tolerations: []
  affinity: {}
  annotations: {}
  labels: {}

dataTier3:
  replicaCount: 0
  resources:
    requests:
      cpu: 400m
      memory: 1300M
    # limits:
    #   cpu:
    #   memory:
  persistence:
    # If persistence is disabled, extraVolumes or extraVolumeClaimTemplates should 
    # be configured with the names:
    # - var - for the segment cache
    # - tmp - for the temp directory
    enabled: true
  segmentCacheVolume:
    storageClassName:
    resources:
      requests:
        storage: 20Gi
    selector: {}
  tmpVolume:
    storageClassName:
    resources:
      requests:
        storage: 10Gi
    selector: {}
  extraVolumeClaimTemplates: {}
  extraEnv: []
  extraVolumes: []
  extraVolumeMounts: []
  nodeSelector: {}
  tolerations: []
  affinity: {}
  annotations: {}
  labels: {}

ingress: {}

# ------------------------------------------------------------------------------
# Zookeeper
# ------------------------------------------------------------------------------
zookeeper:
  replicaCount: 1
  persistence:
    enabled: true
    size: 10Gi
  env:
    ZK_HEAP_SIZE: "512M"
    ZK_PURGE_INTERVAL: 1
    ZOO_AUTOPURGE_PURGEINTERVAL: 1

# ------------------------------------------------------------------------------
# MySQL
# ------------------------------------------------------------------------------
mysql:
  persistence:
    enabled: true
  mysqlRootPassword: imply

# ------------------------------------------------------------------------------
# MinIO
# ------------------------------------------------------------------------------
minio:
  persistence:
    enabled: true
    size: 10Gi
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
  defaultBucket:
    enabled: true
    name: imply
  accessKey: imply
  secretKey: implypassword
